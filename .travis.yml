language: objective-c
os: osx
osx_image: xcode12.2
env:
  - CI_USE_SWIFTPM=true
  - CI_USE_SWIFTPM=false
before_install:
  - gem install xcpretty
  - |
    if ! $CI_USE_SWIFTPM ; then
      xcconfig=$(mktemp /tmp/static.xcconfig.XXXXXX)
      trap 'rm -f "$xcconfig"' INT TERM HUP EXIT
      CURRENT_XCODE_VERSION=$(xcodebuild -version | grep "Build version" | cut -d' ' -f3)
      echo "EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64__XCODE_1200__BUILD_$CURRENT_XCODE_VERSION = arm64 arm64e armv7 armv7s armv6 armv8" >> $xcconfig
      echo 'EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64__XCODE_1200 = $(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64__XCODE_1200__BUILD_$(XCODE_PRODUCT_BUILD_VERSION))' >> $xcconfig
      echo 'EXCLUDED_ARCHS = $(inherited) $(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_$(EFFECTIVE_PLATFORM_SUFFIX)__NATIVE_ARCH_64_BIT_$(NATIVE_ARCH_64_BIT)__XCODE_$(XCODE_VERSION_MAJOR))' >> $xcconfig
      export XCODE_XCCONFIG_FILE="$xcconfig"
      carthage update --no-use-binaries --platform ios
    fi
before_script:
  - set -o pipefail
script: |
  PROJECT_ARG=
  if $CI_USE_SWIFTPM ; then
    rm -rf *.xcodeproj
  else
    PROJECT_ARG="-project ./Unio.xcodeproj"
  fi
  xcodebuild test $PROJECT_ARG -scheme Unio -configuration Debug -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=13.0,name=iPhone 11' | xcpretty -c
notifications:
  email: false
